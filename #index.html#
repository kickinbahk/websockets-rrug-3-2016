<!doctype html>
<html lang="en">

  <head>
    <meta charset="utf-8">        
    <title>WebSockets - RRuG</title>
    <meta name="description" content="A presentation on WebSockets for the RRuG Meetup 03/2016">
    <meta name="author" content="Josiah Mory">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, minimal-ui">
    <script src="https://use.typekit.net/nww3sri.js"></script>
    <script>try{Typekit.load({ async: true });}catch(e){}</script>
    <link rel="stylesheet" href="css/reveal.css">
    <link rel="stylesheet" href="css/theme/blood.css" id="theme">
        
    <!-- Code syntax highlighting -->
    <link rel="stylesheet" href="lib/css/zenburn.css">

    <!-- Printing and PDF exports -->
    <script>
      var link = document.createElement( 'link' );
      link.rel = 'stylesheet';
      link.type = 'text/css';
      link.href = window.location.search.match( /print-pdf/gi ) ? 'css/print/pdf.css' : 'css/print/paper.css';
      document.getElementsByTagName( 'head' )[0].appendChild( link );
    </script>

    <!--[if lt IE 9]>
	 <script src="lib/js/html5shiv.js"></script>
    <![endif]-->
  </head>

  <body>
    <div class="reveal">

      <!-- Any section element inside of this container is displayed as a slide -->
      <div class="slides">
	<section>
          <h1>WebSockets</h1>
          <p>
            <a href="http://kickinbahk.com">Josiah Mory</a> / <a href="http://twitter.com/kickinbahk">@kickinbahk</a>
          </p>
	</section>
        
        <!-- REST --> 
        <section>
          <section data-markdown>
            ## Standard REST Request
          </section>
          <section data-markdown>
            ### Request a Website
            http://www.meetup.com/Riverside-Ruby-User-Group/
          </section>
          <section>
            <span style="text-align: center;">
              <h4>Standard Rest Transaction</h4>
              <br />
              <p class='fragment fade-in'>1. Open a socket port to 80 on meetup.com</p>
              <p class='fragment fade-in'>2. Send an Http header request to the server (Apache/Nginx)</p>
              <p class="fragment fade-in">3. This buffers the message</p>
              <p class="fragment fade-in">4. Message is sent to server apppcation</p>
              <p class='fragment fade-in'>5. Server application decides what to do with request</p>
            </span>
          </section>
          <section>            
            <span style="text-align: center;">
              <h4>Standard Rest Transaction (cont)</h4>
              <br />
              <p class='fragment fade-in'>6. Fetches Data</p>
              <p class="fragment fade-in">7. Generates HTML</p>
              <p class="fragment fade-in">8. Sends it back to the server (Apache/Nginx)</p>
              <p class="fragment fade-in">9. Appropriate HTTP headers are added to the body</p>
              <p class="fragment fade-in">10. Sent back to browser and connection closed </p>              
            </span>
          </section>
          <section data-markdown>
            ## Cookies
          </section>
          <section data-markdown>
            ### Identity Maintained by Cookies
          </section>
          <section data-markdown>
            ### Passed back and forth with all requests
          </section>
          <section>
            <ul>
              <li class="fragment fade-in">Carries Overhead</li>
              <li class="fragment fade-in">Open to Security Vulnerabilities</li>
            </ul>
          </section>
        </section>
        
        <!-- Websockets -->
        <section data-markdown>
          ## Introducing Websockets
        </section>
        <section data-markdown>
          ### Originally Part of HTML5 standard
        </section>
        <section data-markdown>
          ### Moved to its own standard to keep the specification focused
        </section>
        <section data-markdown>
          ### Bi-directional, full-duplex persistent connection from a web browser to a server
        </section>
	<section data-markdown>
          ### An Interactive communication session between the user's browser and a server
	</section>
        <section data-markdown>
          ### Client or Server can pass messages to each other at any time
        </section>
        <section data-markdown>
          ## Remains Open till Client Closes Connection
        </section>
        <section data-markdown>
          ## Stateless
        </section>
        <section data-markdown>
          ## No Connection Limitation
          (Mulitple Tabs)
        </section>
	<section data-transition="fade-in none">
          <h2>Faye - Rails</h2>
          <h2 class="fragment fade-in" data-fragment-index="1">Socket.io - Node</h2>
          <h2 class="fragment fade-in" data-fragment-index="2">ActionCable - Rails </h2>
	</section>
	<section data-transition="none">
          <h2 class="fragment highlight-red" data-fragment-index="0">Faye - Rails</h2>
          <h2 class="fragment highlight-blue" data-fragment-index="1">Socket.io - Node</h2>
          <h2 class="fragment highlight-red" data-fragment-index="0">ActionCable - Rails </h2>
	</section>

        <!-- Why Not Use WebSockets -->
	<section data-markdown>
          ## Why Not Websockets? 
	</section>
        <section data-markdown>
          ### Users want "delightful realtime web apps".
        </section>
        <section data-markdown>
          ### Developers want "delightfully easy to build realtime web apps".
        </section>
        <section data-markdown>
          ### Operations want "delightfully easy to deploy, scale and manage realtime web apps".
        </section>
        <section>
          <h3>Difficult to Implement</h3>
          <h3 class="fragment fade-in">Difficult to Debug</h3>
          <h3 class="fragment fade-in">No Connection Limitation</h3>
          <h3 class="fragment fade-in">Complicated Load Balancing</h3>
        </section>
        <section data-markdown>
          ### [https://samsaffron.com/archive/2015/12/29/websockets-caution-required](https://samsaffron.com/archive/2015/12/29/websockets-caution-required)
        </section>
      </div>

    </div>

    <script src="lib/js/head.min.js"></script>
    <script src="js/reveal.js"></script>

    <script>

      // Full list of configuration options available at:
      // https://github.com/hakimel/reveal.js#configuration
      Reveal.initialize({
      controls: true,
      progress: true,
      history: true,
      center: true,
      transition: 'slide', // none/fade/slide/convex/concave/zoom

      // Optional reveal.js plugins
      dependencies: [
      { src: 'lib/js/classList.js', condition: function() { return !document.body.classList; } },
      { src: 'plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
      { src: 'plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
      { src: 'plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
      { src: 'plugin/zoom-js/zoom.js', async: true },
      { src: 'plugin/notes/notes.js', async: true }
      ]
      });

    </script>

  </body>
</html>
